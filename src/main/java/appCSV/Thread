import com.opencsv.CSVReader;

import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.*;

public class MultiThreadedCsvReader {

    public static void main(String[] args) {
        List<String> fileNames = List.of("file1.csv", "file2.csv", "file3.csv");
        int numThreads = 3;

        ExecutorService executorService = Executors.newFixedThreadPool(numThreads);
        List<Future<List<String[]>>> futures = new ArrayList<>();

        for (String fileName : fileNames) {
            Callable<List<String[]>> callable = () -> readCsvFile(fileName);
            Future<List<String[]>> future = executorService.submit(callable);
            futures.add(future);
        }

        List<String[]> allRows = new ArrayList<>();

        for (Future<List<String[]>> future : futures) {
            try {
                List<String[]> rows = future.get();
                allRows.addAll(rows);
            } catch (InterruptedException | ExecutionException e) {
                e.printStackTrace();
            }
        }

        executorService.shutdown();

        // Теперь у вас есть все строки из всех файлов в общем списке
        for (String[] row : allRows) {
            // Ваши действия с каждой строкой
            System.out.println(String.join(",", row));
        }
    }

    private static List<String[]> readCsvFile(String fileName) {
        List<String[]> rows = new ArrayList<>();
        try (CSVReader csvReader = new CSVReader(new FileReader(fileName))) {
            String[] row;
            while ((row = csvReader.readNext()) != null) {
                rows.add(row);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return rows;
    }
}
